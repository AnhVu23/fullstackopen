{"version":3,"sources":["services/phoneBook.js","App.js","index.js"],"names":["baseUrl","Filter","search","onSearchChange","value","onChange","PersonForm","onFormSubmit","newName","newPhoneNum","onNewNameChange","onNewPhoneChange","onSubmit","type","Persons","persons","onDeletePerson","filter","person","name","toLowerCase","includes","map","className","number","onClick","App","useState","setPersons","setNewName","setNewPhoneNum","setSearch","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","getPhoneBook","axios","get","then","res","data","catch","e","response","error","console","target","preventDefault","id","foundPersonIndex","findIndex","window","confirm","put","log","setTimeout","newPerson","post","phoneBookService","delete","status","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4d18d94.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\n/**\n * Phone book service\n *\n * @author Anh Vu <anh.vu@vertics.co>\n *\n * @copyright Vertics Oy 2020\n */\nimport axios from 'axios'\n\nconst baseUrl = 'api/persons'\nexport const getAll = () => {\n  return axios\n    .get(baseUrl)\n    .then((res) => {\n      return res.data\n    })\n    .catch((e) => {\n      throw e\n    })\n}\n\nexport const createOne = (data) => {\n  return axios\n    .post(baseUrl, data)\n    .then((res) => {\n      return res\n    })\n    .catch((e) => {\n      throw e\n    })\n}\n\nexport const deleteOne = (id) => {\n  return axios\n    .delete(`${baseUrl}/${id}`)\n    .then((res) => {\n      return res\n    })\n    .catch((e) => {\n      throw e\n    })\n}\n\nexport const editOne = (id, data) => {\n    return axios\n    .put(`${baseUrl}/${id}`, data)\n    .then(res => {\n        console.log(res)\n        return res\n    })\n    .catch(e => {\n        throw e\n    })\n}","import React, { useState, useEffect } from 'react'\nimport * as phoneBookService from './services/phoneBook'\nimport './App.css'\nconst Filter = ({ search, onSearchChange }) => {\n  return (\n    <div>\n      filter shown with <input value={search} onChange={onSearchChange} />\n    </div>\n  )\n}\n\nconst PersonForm = ({\n  onFormSubmit,\n  newName,\n  newPhoneNum,\n  onNewNameChange,\n  onNewPhoneChange,\n}) => {\n  return (\n    <form onSubmit={onFormSubmit}>\n      <h2>Add a new</h2>\n      <div>\n        name: <input value={newName} onChange={onNewNameChange} />\n      </div>\n      <div>\n        number: <input value={newPhoneNum} onChange={onNewPhoneChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst Persons = ({ persons, search, onDeletePerson }) =>\n  persons\n    .filter((person) =>\n      person.name.toLowerCase().includes(search.toLowerCase())\n    )\n    .map((person) => (\n      <div className={'flex'}>\n        <p key={person.name}>\n          {person.name} {person.number}\n        </p>\n        <button onClick={() => onDeletePerson(person)}>\n          <span>delete</span>\n        </button>\n      </div>\n    ))\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newPhoneNum, setNewPhoneNum] = useState('')\n  const [search, setSearch] = useState('')\n  const [successMessage, setSuccessMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    getPhoneBook()\n  }, [])\n\n  const getPhoneBook = () => {\n    phoneBookService\n      .getAll()\n      .then((persons) => {\n        setPersons(persons)\n      })\n      .catch((e) => {\n        setErrorMessage(e.response.data.error)\n        console.error(e)\n      })\n  }\n  const onFormSubmit = (e) => {\n    e.preventDefault()\n    const foundPersonIndex = persons.findIndex(\n      (person) => person.name === newName\n    )\n    const foundExistPerson = foundPersonIndex > -1\n    if (foundExistPerson) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one`\n        )\n      ) {\n        phoneBookService\n          .editOne(persons[foundPersonIndex].id, {\n            ...persons[foundPersonIndex],\n            number: newPhoneNum,\n          })\n          .then((res) => {\n            setNewName('')\n            setNewPhoneNum('')\n            getPhoneBook()\n            setSuccessMessage(`Edited ${persons[foundPersonIndex].name}`)\n            setTimeout(() => setSuccessMessage(null), 3000)\n          })\n          .catch(e => {\n            console.log(e)\n            setErrorMessage(e.response.data.error)\n          })\n      }\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newPhoneNum,\n      }\n      phoneBookService\n        .createOne(newPerson)\n        .then((res) => {\n          getPhoneBook()\n          setNewName('')\n          setNewPhoneNum('')\n          setSuccessMessage(`Added ${newPerson.name}`)\n            setTimeout(() => setSuccessMessage(null), 3000)\n        })\n        .catch((e) => {\n          console.error(e)\n          setErrorMessage(e.response.data.error)\n        })\n    }\n  }\n\n  const onDeletePerson = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      phoneBookService\n        .deleteOne(person.id)\n        .then((res) => {\n          getPhoneBook()\n        })\n        .catch((e) => {\n          if (e.response.status === 404) {\n            setErrorMessage(`Information of ${person.name} has already been removed from server`)\n            setTimeout(() => setErrorMessage(null), 3000)\n          }\n          setErrorMessage(e.response.data.error)\n          console.error(e)\n        })\n    }\n  }\n  return (\n    <div className='App'>\n      <h2>Phonebook</h2>\n      {successMessage ? (\n        <div className=\"success-message-box\">\n          <p className=\"success-message-text\">{successMessage}</p>\n        </div>\n      ) : null}\n      {errorMessage ? (\n        <div className=\"error-message-box\">\n          <p className=\"error-message-text\">{errorMessage}</p>\n        </div>\n      ) : null}\n      <Filter\n        search={search}\n        onSearchChange={(e) => setSearch(e.target.value)}\n      />\n      <PersonForm\n        onFormSubmit={onFormSubmit}\n        newName={newName}\n        newPhoneNum={newPhoneNum}\n        onNewNameChange={(e) => setNewName(e.target.value)}\n        onNewPhoneChange={(e) => setNewPhoneNum(e.target.value)}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        search={search}\n        persons={persons}\n        onDeletePerson={onDeletePerson}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}